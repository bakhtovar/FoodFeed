{"ast":null,"code":"var _jsxFileName = \"/Users/bakhtovar/Downloads/AUCA/FoodFeed/src/Components/Registration.js\";\nimport React, { useState, useEffect } from 'react';\nimport back from '../Img/back.jpg';\nimport Header from '../Components/Header';\nimport { Form, Button, Nav } from \"react-bootstrap\";\nimport { useHistory } from \"react-router-dom\";\n\nfunction Register() {\n  const [login, setLogin] = useState();\n  const [password, setPassword] = useState();\n  const [values, setValues] = useState({\n    password: \"\",\n    showPassword: false\n  });\n  const [form, setForm] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    gender: \"\"\n  });\n  const [errMsg, setErrMsg] = useState(\"none\");\n\n  const handleClickShowPassword = () => {\n    setValues({ ...values,\n      showPassword: !values.showPassword\n    });\n  };\n\n  const handleMouseDownPassword = event => {\n    event.preventDefault();\n  };\n\n  const onNameChange = e => setForm({\n    name: e.target.value,\n    email: form.email,\n    password: form.password,\n    gender: form.gender\n  });\n\n  const onEmailChange = () => setForm({\n    name: form.name,\n    email: e.target.value,\n    password: form.password,\n    gender: form.gender\n  });\n\n  const onPassChange = () => setForm({\n    name: form.name,\n    email: form.email,\n    password: e.target.value,\n    gender: form.gender\n  });\n\n  const onGenderChange = () => setForm({\n    name: form.name,\n    email: form.email,\n    password: form.password,\n    gender: e.target.value\n  });\n\n  const history = useHistory();\n\n  const onSubForm = () => {\n    if (form.name !== \"\" && form.email !== \"\" && form.password !== \"\" && form.gender !== \"\") {\n      const usersFromLocalStorage = localStorage.getItem(\"data\");\n\n      if (usersFromLocalStorage) {\n        const parsedQuestions = JSON.parse(usersFromLocalStorage);\n        parsedQuestions.push(form);\n        localStorage.setItem(\"data\", JSON.stringify(parsedQuestions));\n      } else {\n        localStorage.setItem(\"data\", JSON.stringify([form]));\n      }\n\n      history.push({\n        pathname: \"/login\",\n        search: \"?reg=success\"\n      });\n    } else {\n      setErrMsg(\"block\");\n    }\n\n    e.preventDefault();\n  };\n\n  useEffect(() => {\n    if (localStorage.getItem(\"auth\") === \"true\") history.push({\n      pathname: \"/admin\"\n    });\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Form, {\n    className: \"FormReg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  }, \"Username\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: \"Enter username\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Form.Text, {\n    className: \"text-muted\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 5\n    }\n  }, \"We'll never share your email with anyone else.\"), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"formBasicEmail\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 5\n    }\n  }, \"Email address\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"email\",\n    placeholder: \"Enter email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(Form.Text, {\n    className: \"text-muted\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 5\n    }\n  }, \"We'll never share your email with anyone else.\")), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"formBasicPassword\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 5\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"password\",\n    placeholder: \"Password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 5\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"formBasicCheckbox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(Form.Check, {\n    type: \"checkbox\",\n    label: \"Check me out\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 5\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    variant: \"primary\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 3\n    }\n  }, \"Submit\")));\n}\n\nexport default Register;","map":{"version":3,"sources":["/Users/bakhtovar/Downloads/AUCA/FoodFeed/src/Components/Registration.js"],"names":["React","useState","useEffect","back","Header","Form","Button","Nav","useHistory","Register","login","setLogin","password","setPassword","values","setValues","showPassword","form","setForm","name","email","gender","errMsg","setErrMsg","handleClickShowPassword","handleMouseDownPassword","event","preventDefault","onNameChange","e","target","value","onEmailChange","onPassChange","onGenderChange","history","onSubForm","usersFromLocalStorage","localStorage","getItem","parsedQuestions","JSON","parse","push","setItem","stringify","pathname","search"],"mappings":"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","sourcesContent":["import React, { useState, useEffect} from 'react';\nimport back from '../Img/back.jpg';\nimport Header from '../Components/Header';\nimport {\n    Form,\n    Button,\n    Nav,\n  } from \"react-bootstrap\";\n  import { useHistory } from \"react-router-dom\";\n\nfunction Register(){\n\n    const [login, setLogin] = useState();\n    const [password, setPassword]= useState();\n    const [values, setValues] = useState({ password: \"\", showPassword: false });\n    const [form, setForm] = useState({\n      name: \"\",\n      email: \"\",\n      password: \"\",\n      gender: \"\"\n    });\n    const [errMsg, setErrMsg] = useState(\"none\");\n    const handleClickShowPassword = () => {\n      setValues({ ...values, showPassword: !values.showPassword });\n    };\n    const handleMouseDownPassword = (event: any) => {\n      event.preventDefault();\n    };\n  \n    const onNameChange = (e: any) =>\n      setForm({\n        name: e.target.value,\n        email: form.email,\n        password: form.password,\n        gender: form.gender\n      });\n    const onEmailChange = () =>\n      setForm({\n        name: form.name,\n        email: e.target.value,\n        password: form.password,\n        gender: form.gender\n      });\n    const onPassChange = () =>\n      setForm({\n        name: form.name,\n        email: form.email,\n        password: e.target.value,\n        gender: form.gender\n      });\n    const onGenderChange = () =>\n      setForm({\n        name: form.name,\n        email: form.email,\n        password: form.password,\n        gender: e.target.value\n      });\n  \n    const history = useHistory();\n  \n    const onSubForm = () => {\n      if (\n        form.name !== \"\" &&\n        form.email !== \"\" &&\n        form.password !== \"\" &&\n        form.gender !== \"\"\n      ) {\n        const usersFromLocalStorage = localStorage.getItem(\"data\");\n  \n        if (usersFromLocalStorage) {\n          const parsedQuestions = JSON.parse(usersFromLocalStorage);\n          parsedQuestions.push(form);\n          localStorage.setItem(\"data\", JSON.stringify(parsedQuestions));\n        } else {\n          localStorage.setItem(\"data\", JSON.stringify([form]));\n        }\n  \n        history.push({\n          pathname: \"/login\",\n          search: \"?reg=success\"\n        });\n      } else {\n        setErrMsg(\"block\");\n      }\n      e.preventDefault();\n    };\n  \n    useEffect(() => {\n      if (localStorage.getItem(\"auth\") === \"true\")\n        history.push({ pathname: \"/admin\" });\n    }, []);\n  \n    return (\n        <div>\n        <Header/>\n        <Form className=\"FormReg\">\n        <Form.Label>Username</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"Enter username\" />\n    <Form.Text className=\"text-muted\">\n      We'll never share your email with anyone else.\n    </Form.Text>\n  <Form.Group controlId=\"formBasicEmail\">\n    <Form.Label>Email address</Form.Label>\n    <Form.Control type=\"email\" placeholder=\"Enter email\" />\n    <Form.Text className=\"text-muted\">\n      We'll never share your email with anyone else.\n    </Form.Text>\n    \n  </Form.Group>\n\n  <Form.Group controlId=\"formBasicPassword\">\n    <Form.Label>Password</Form.Label>\n    <Form.Control type=\"password\" placeholder=\"Password\" />\n  </Form.Group>\n  <Form.Group controlId=\"formBasicCheckbox\">\n    <Form.Check type=\"checkbox\" label=\"Check me out\" />\n  </Form.Group>\n  <Button variant=\"primary\" type=\"submit\">\n    Submit\n  </Button>\n</Form>\n    </div>\n    );\n}\n\nexport default Register;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { useState, useCallback } from 'react';\n\nconst useForm = callback => {\n  const [errors, setErrors] = useState({\n    email: \"\",\n    password: \"\"\n  });\n  const [values, setValues] = useState({\n    email: \"\",\n    password: \"\"\n  });\n\n  const HandleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    console.log(event.target.name);\n    console.log(event.target.value);\n    setValues({ ...values,\n      [name]: value\n    });\n  };\n\n  const HandleSubmit = event => {\n    callback();\n  };\n\n  return {\n    HandleChange,\n    HandleSubmit,\n    values\n  };\n};\n\nexport default useForm;","map":{"version":3,"sources":["/Users/bakhtovar/Downloads/js/project/src/Components/useForm.js"],"names":["useState","useCallback","useForm","callback","errors","setErrors","email","password","values","setValues","HandleChange","event","name","value","target","console","log","HandleSubmit"],"mappings":"AAAA,SAAUA,QAAV,EAAoBC,WAApB,QAAuC,OAAvC;;AAEA,MAAMC,OAAO,GAAIC,QAAQ,IAAI;AACzB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBL,QAAQ,CAAC;AAACM,IAAAA,KAAK,EAAC,EAAP;AAAWC,IAAAA,QAAQ,EAAC;AAApB,GAAD,CAApC;AACA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAAC;AAACM,IAAAA,KAAK,EAAC,EAAP;AAAWC,IAAAA,QAAQ,EAAC;AAApB,GAAD,CAApC;;AACA,QAAMG,YAAY,GAAGC,KAAK,IAAG;AACzB,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAiBF,KAAK,CAACG,MAA7B;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYL,KAAK,CAACG,MAAN,CAAaF,IAAzB;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAYL,KAAK,CAACG,MAAN,CAAaD,KAAzB;AACAJ,IAAAA,SAAS,CAAC,EACP,GAAGD,MADI;AAEP,OAACI,IAAD,GAAOC;AAFA,KAAD,CAAT;AAIH,GARD;;AASA,QAAMI,YAAY,GAAGN,KAAK,IAAI;AAC3BR,IAAAA,QAAQ;AACV,GAFD;;AAGA,SAAO;AACHO,IAAAA,YADG;AAEHO,IAAAA,YAFG;AAGHT,IAAAA;AAHG,GAAP;AAMH,CArBD;;AAsBA,eAAeN,OAAf","sourcesContent":["import  { useState, useCallback } from 'react';\n\nconst useForm =  callback => {\n    const [errors, setErrors] = useState({email:\"\", password:\"\"})\n    const [values, setValues] = useState({email:\"\", password:\"\"})\n    const HandleChange = event =>{\n        const { name, value} = event.target;\n        console.log(event.target.name);\n        console.log(event.target.value);\n        setValues({\n           ...values,\n           [name]:value\n        })\n    };\n    const HandleSubmit = event => {\n       callback();\n    };\n    return {\n        HandleChange,\n        HandleSubmit,\n        values\n    };\n\n};\nexport default useForm;"]},"metadata":{},"sourceType":"module"}
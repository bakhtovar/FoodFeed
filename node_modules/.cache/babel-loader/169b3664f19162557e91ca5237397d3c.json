{"ast":null,"code":"var _jsxFileName = \"/Users/bakhtovar/Downloads/AUCA/FoodFeed/src/Components/Login.js\";\nimport React from 'react';\nimport Header from '../Components/Header';\nimport { Form, Button, Nav } from \"react-bootstrap\";\nimport { useHistory, Link } from \"react-router-dom\";\n\nfunction Login() {\n  const [errMsg, SetErrMsg] = useState(\"none\");\n  const [values, setValues] = useState({\n    password: \"\",\n    showPassword: false\n  });\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassord] = useState(\"\");\n  const classes = useStyles();\n\n  const handleClickShowPassword = () => {\n    setValues({ ...values,\n      showPassword: !values.showPassword\n    });\n  };\n\n  const handleMouseDownPassword = event => event.preventDefault();\n\n  const onEmailChange = e => setEmail(e.target.value);\n\n  const onPasswordChange = e => setPassord(e.target.value);\n\n  const history = useHistory();\n  const qparse = queryString.parse(history.location.search);\n\n  const onSubmitForm = e => {\n    const usersLocalStorage = localStorage.getItem(\"data\");\n\n    if (usersLocalStorage) {\n      const parse = JSON.parse(usersLocalStorage);\n      const existUser = parse.find(data => data.email === email && data.password === password);\n\n      if (!existUser) {\n        localStorage.setItem(\"auth\", \"false\");\n        SetErrMsg(\"block\");\n      } else {\n        localStorage.setItem(\"auth\", \"true\");\n        localStorage.setItem(\"authUser\", JSON.stringify(existUser));\n        history.push({\n          pathname: \"/admin\"\n        });\n      }\n    }\n\n    e.preventDefault();\n  };\n\n  useEffect(() => {\n    if (qparse.auth === \"false\") {\n      SetErrMsg(\"block\");\n    }\n\n    if (localStorage.getItem(\"auth\") === \"true\") history.push({\n      pathname: \"/admin\"\n    });\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  });\n}\n\nexport default Login;","map":{"version":3,"sources":["/Users/bakhtovar/Downloads/AUCA/FoodFeed/src/Components/Login.js"],"names":["React","Header","Form","Button","Nav","useHistory","Link","Login","errMsg","SetErrMsg","useState","values","setValues","password","showPassword","email","setEmail","setPassord","classes","useStyles","handleClickShowPassword","handleMouseDownPassword","event","preventDefault","onEmailChange","e","target","value","onPasswordChange","history","qparse","queryString","parse","location","search","onSubmitForm","usersLocalStorage","localStorage","getItem","JSON","existUser","find","data","setItem","stringify","push","pathname","useEffect","auth"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SACIC,IADJ,EAEIC,MAFJ,EAGIC,GAHJ,QAIS,iBAJT;AAKE,SAASC,UAAT,EAAqBC,IAArB,QAAiC,kBAAjC;;AAIA,SAASC,KAAT,GAAiB;AACf,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBC,QAAQ,CAAC,MAAD,CAApC;AACA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBF,QAAQ,CAAC;AAAEG,IAAAA,QAAQ,EAAE,EAAZ;AAAgBC,IAAAA,YAAY,EAAE;AAA9B,GAAD,CAApC;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACG,QAAD,EAAWI,UAAX,IAAyBP,QAAQ,CAAC,EAAD,CAAvC;AAEA,QAAMQ,OAAO,GAAGC,SAAS,EAAzB;;AAEA,QAAMC,uBAAuB,GAAG,MAAM;AACpCR,IAAAA,SAAS,CAAC,EAAE,GAAGD,MAAL;AAAaG,MAAAA,YAAY,EAAE,CAACH,MAAM,CAACG;AAAnC,KAAD,CAAT;AACD,GAFD;;AAGA,QAAMO,uBAAuB,GAAIC,KAAD,IAAgBA,KAAK,CAACC,cAAN,EAAhD;;AACA,QAAMC,aAAa,GAAIC,CAAD,IAAYT,QAAQ,CAACS,CAAC,CAACC,MAAF,CAASC,KAAV,CAA1C;;AACA,QAAMC,gBAAgB,GAAIH,CAAD,IAAYR,UAAU,CAACQ,CAAC,CAACC,MAAF,CAASC,KAAV,CAA/C;;AAEA,QAAME,OAAO,GAAGxB,UAAU,EAA1B;AACA,QAAMyB,MAAW,GAAGC,WAAW,CAACC,KAAZ,CAAkBH,OAAO,CAACI,QAAR,CAAiBC,MAAnC,CAApB;;AAEA,QAAMC,YAAY,GAAIV,CAAD,IAAY;AAC/B,UAAMW,iBAAiB,GAAGC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAA1B;;AACA,QAAIF,iBAAJ,EAAuB;AACrB,YAAMJ,KAAK,GAAGO,IAAI,CAACP,KAAL,CAAWI,iBAAX,CAAd;AACA,YAAMI,SAAS,GAAGR,KAAK,CAACS,IAAN,CACfC,IAAD,IAAeA,IAAI,CAAC3B,KAAL,KAAeA,KAAf,IAAwB2B,IAAI,CAAC7B,QAAL,KAAkBA,QADzC,CAAlB;;AAGA,UAAI,CAAC2B,SAAL,EAAgB;AACdH,QAAAA,YAAY,CAACM,OAAb,CAAqB,MAArB,EAA6B,OAA7B;AACAlC,QAAAA,SAAS,CAAC,OAAD,CAAT;AACD,OAHD,MAGO;AACL4B,QAAAA,YAAY,CAACM,OAAb,CAAqB,MAArB,EAA6B,MAA7B;AACAN,QAAAA,YAAY,CAACM,OAAb,CAAqB,UAArB,EAAiCJ,IAAI,CAACK,SAAL,CAAeJ,SAAf,CAAjC;AACAX,QAAAA,OAAO,CAACgB,IAAR,CAAa;AACXC,UAAAA,QAAQ,EAAE;AADC,SAAb;AAGD;AACF;;AACDrB,IAAAA,CAAC,CAACF,cAAF;AACD,GAnBD;;AAqBAwB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIjB,MAAM,CAACkB,IAAP,KAAgB,OAApB,EAA6B;AAC3BvC,MAAAA,SAAS,CAAC,OAAD,CAAT;AACD;;AACD,QAAI4B,YAAY,CAACC,OAAb,CAAqB,MAArB,MAAiC,MAArC,EACET,OAAO,CAACgB,IAAR,CAAa;AAAEC,MAAAA,QAAQ,EAAE;AAAZ,KAAb;AACH,GANQ,EAMN,EANM,CAAT;AASA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ;AAKD;;AACD,eAAevC,KAAf","sourcesContent":["import React from 'react';\n\nimport Header from '../Components/Header';\nimport {\n    Form,\n    Button,\n    Nav,\n  } from \"react-bootstrap\";\n  import { useHistory, Link } from \"react-router-dom\";\n\n\n\n  function Login() {\n    const [errMsg, SetErrMsg] = useState(\"none\");\n    const [values, setValues] = useState({ password: \"\", showPassword: false });\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassord] = useState(\"\");\n  \n    const classes = useStyles();\n  \n    const handleClickShowPassword = () => {\n      setValues({ ...values, showPassword: !values.showPassword });\n    };\n    const handleMouseDownPassword = (event: any) => event.preventDefault();\n    const onEmailChange = (e: any) => setEmail(e.target.value);\n    const onPasswordChange = (e: any) => setPassord(e.target.value);\n  \n    const history = useHistory();\n    const qparse: any = queryString.parse(history.location.search);\n  \n    const onSubmitForm = (e: any) => {\n      const usersLocalStorage = localStorage.getItem(\"data\");\n      if (usersLocalStorage) {\n        const parse = JSON.parse(usersLocalStorage);\n        const existUser = parse.find(\n          (data: any) => data.email === email && data.password === password\n        );\n        if (!existUser) {\n          localStorage.setItem(\"auth\", \"false\");\n          SetErrMsg(\"block\");\n        } else {\n          localStorage.setItem(\"auth\", \"true\");\n          localStorage.setItem(\"authUser\", JSON.stringify(existUser));\n          history.push({\n            pathname: \"/admin\"\n          });\n        }\n      }\n      e.preventDefault();\n    };\n  \n    useEffect(() => {\n      if (qparse.auth === \"false\") {\n        SetErrMsg(\"block\");\n      }\n      if (localStorage.getItem(\"auth\") === \"true\")\n        history.push({ pathname: \"/admin\" });\n    }, []);\n  \n\n    return(\n        <div>\n       \n        </div>\n    );\n  }\n  export default Login;"]},"metadata":{},"sourceType":"module"}